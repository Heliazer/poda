#!/bin/sh

set -e

# I would have used realpath but I there are systems that are *really* old
# and don't have realpath yet, so I copied this from Stack Overflow answer,
# so credit to the answer author: Eugen Konkov. Very nice trick.
# - https://stackoverflow.com/a/31605674
#
# Adapted to apply only to directories. Otherwise the realpath for "."
# would be /some/dir/.
realdir() {
    echo "$(cd "$1"; pwd)"
}

print_help() {
    echo "usage: poda-remote-add [options] <remote> <protocol> <[user@]host> [poda_directory]"
    echo
    echo "Options:"
    echo "  -h  --help        Prints this help message"
    echo
    echo "Parameters:"
    echo "  remote            Name of the remote to define."
    echo "  protocol          For now, only ssh is supported."
    echo "  [user@]host       Remote address; can be FQDN; can be user@host."
    echo "  poda_directory    Optional location of the poda_direcory."
    echo
    echo "Supported protocols:"
    echo "  ssh               Uses SSH. Remote must have poda tools in PATH."
    echo
}

[ -z "${PODADIR}" ] && PODADIR=$HOME/.poda

[ ! -f "${PODADIR}/hostname" ] && {
    echo "Invalid Poda directory: ${PODADIR} - Maybe run poda init?"
    exit 1
}

# poda-remote-add stora ssh 192.168.15.9 /home/alvarezp/.poda
# poda-remote-add stora ssh 192.168.15.9

HOSTNAME="$(cat "${PODADIR}"/hostname)"

# [ ! -z ] ---> [ -n ]
while [ -n "$1" ]; do
    case "$1" in
    --help|-h)
        print_help
        exit 0
        ;;
    *)
        # From first unknown parameter and on, consider it "the rest" of
        # the argument list, this is: <remote> <url>
        break;
    esac
    shift
done

if [ "$#" -ge 5 ]; then
    print_help >&2
    exit 1;
fi

REMOTE="$1"
shift

PROTOCOL="$1"
shift

HOST="$1"
shift

RPODADIR="$1"

if [ "${REMOTE}" = "${HOSTNAME}" ]; then
    echo "Remote '${REMOTE}' has the same name as local host. Exiting."
    exit 1
fi

touch "${PODADIR}/remotes"
while read -r _RE ELSE; do
    if [ "${_RE}" = "${REMOTE}" ]; then
        echo "Remote '${REMOTE}' already exists. Please remove it first."
        echo "For now, it has to be done manually in ${PODADIR}/remotes."
        exit 1
    fi
done < "${PODADIR}/remotes"

printf "%-16s %-10s %-30s %s\n" \
    "${REMOTE}" "${PROTOCOL}" "${HOST}" "${RPODADIR}" \
    >> "${PODADIR}/remotes"
